{"version":3,"file":"static/js/601.5e31e5bc.chunk.js","mappings":"yUAGaA,GAAiBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2OAWdE,EAAaF,EAAAA,GAAAA,GAAH,8OAYVG,EAAoBH,EAAAA,GAAAA,IAAH,8KAWjBI,GAAyBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,6PAetBM,GAAoBN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,sBAEjBQ,EAAQR,EAAAA,GAAAA,IAAH,qIAQLS,EAAkBT,EAAAA,GAAAA,IAAH,+CAIfU,EAAoBV,EAAAA,GAAAA,KAAH,kTAYjBW,EAAaX,EAAAA,GAAAA,IAAH,gKASVY,EAAkBZ,EAAAA,GAAAA,OAAH,gYAoBfa,EAAkBb,EAAAA,GAAAA,EAAH,2I,SCrFtBc,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaE,WACpBJ,SAAUE,EAAAA,KAAaG,IAAI,IAAIC,IAAI,IAAIF,aAsEzC,EAnEkB,WAChB,OAAwCG,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAMXC,EAAY,mCAAG,WAAOC,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,kBAEXJ,GAASK,EAAAA,EAAAA,IAAeF,IAFb,OAGjBL,EAAS,SACTM,IAJiB,gDAMjBE,QAAQC,IAAI,iBAAZ,MANiB,yDAAH,wDAUlB,OACE,+BACE,SAAC,KAAD,CACErB,cAAeA,EACfsB,iBAAkBnB,EAClBoB,SAAUP,EAHZ,UAKE,UAAC/B,EAAD,YACE,SAACG,EAAD,qBACA,UAACC,EAAD,YACE,SAACC,EAAD,CACEkC,KAAK,QACLC,KAAK,QACLC,YAAY,WAEd,SAAClC,EAAD,CAAmBiC,KAAK,QAAxB,SACG,SAAAE,GAAG,OAAI,SAACjC,EAAD,UAAQiC,GAAZ,QAGR,UAACtC,EAAD,YACE,UAACM,EAAD,YACE,SAACL,EAAD,CACEkC,KAAMd,EAAe,OAAS,WAC9Be,KAAK,WACLC,YAAY,cAEd,SAAC9B,EAAD,CAAmBgC,QAxCJ,WACzBjB,GAAgB,SAAAkB,GAAgB,OAAKA,CAAL,GACjC,EAsCW,SACGnB,GAAe,SAAC,MAAD,KAAiB,SAAC,MAAD,UAGrC,SAAClB,EAAD,CAAmBiC,KAAK,WAAxB,SACG,SAAAE,GAAG,OAAI,SAACjC,EAAD,UAAQiC,GAAZ,QAGR,SAAC9B,EAAD,WACE,SAACC,EAAD,CAAiB0B,KAAK,SAAtB,wBAEF,SAAC,KAAD,CAAMM,GAAG,gBAAT,UACE,SAAC/B,EAAD,0CAMX,E,sDCrFYgC,GATmB7C,EAAAA,GAAAA,QAAH,+LAGH8C,GAMM9C,EAAAA,GAAAA,IAAH,oFCC7B,EAVkB,WAChB,OACE,+BACE,SAAC6C,EAAD,WACE,SAAC,EAAD,OAIP,C","sources":["components/MainForm/FormLogin/FormLogin.styled.js","components/MainForm/FormLogin/FormLogin.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyleFormLogin = styled(Form)`\n  position: relative;\n  width: 100%;\n  background-image: var(--background-body);\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 45px;\n  padding-top: 92px;\n  border-radius: 70px 70px 0 0;\n`;\n\nexport const LoginTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 30px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: var(--color);\n  text-transform: uppercase;\n  margin-bottom: 35px;\n`;\n\nexport const FeedbackFormGroup = styled.div`\n  max-width: 545px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  &:nth-last-of-type(2) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const StyleInputRegistration = styled(Field)`\n  width: 100%;\n  display: flex;\n  padding: 16px;\n  background-color: #f6f6f6;\n  border: 1px solid #e8e8e8;\n  border-radius: 8px;\n\n  &::placeholder {\n    font-size: 16px;\n    line-height: 19px;\n    color: #bdbdbd;\n  }\n`;\n\nexport const StyleErrorMessage = styled(ErrorMessage)``;\n\nexport const Error = styled.div`\n  color: red;\n  font-size: 15px;\n  margin-top: 10px;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ToggleShowPasword = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translate(-50%, -10px);\n  -webkit-transform: translate(-50%, -10px);\n  -moz-transform: translate(-50%, -10px);\n  -ms-transform: translate(-50%, -10px);\n  -o-transform: translate(-50%, -10px);\n  cursor: pointer;\n`;\n\nexport const Btnwrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 545px;\n`;\n\nexport const BtnRegistration = styled.button`\n  width: 100%;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  background-color: #ff6c00;\n  border-radius: 100px;\n  font-size: 16px;\n  line-height: 1.19;\n  color: #ffffff;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.4s;\n  margin-bottom: 15px;\n\n  &:hover {\n    background-color: #ff4c00;\n  }\n`;\n\nexport const LinkOnPageLogIn = styled.p`\n  text-align: center;\n  cursor: pointer;\n  color: #f6f6f6;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport { authSignInUser } from 'redux/auth/authOperation';\nimport { useDispatch} from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport * as yup from 'yup';\nimport {\n  StyleFormLogin,\n  LoginTitle,\n  FeedbackFormGroup,\n  StyleInputRegistration,\n  StyleErrorMessage,\n  Error,\n  PasswordWrapper,\n  ToggleShowPasword,\n  Btnwrapper,\n  BtnRegistration,\n  LinkOnPageLogIn,\n} from './FormLogin.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().min(10).max(20).required(),\n});\n\nconst FormLogin = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const toggleShowPassword = () => {\n    setShowPassword(prewShowPassword => !prewShowPassword);\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      await dispatch(authSignInUser(values));\n      navigate('/Home');\n      resetForm();\n    } catch (error) {\n      console.log('Sign-in error:', error);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyleFormLogin>\n          <LoginTitle>Login</LoginTitle>\n          <FeedbackFormGroup>\n            <StyleInputRegistration\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n            />\n            <StyleErrorMessage name=\"email\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <FeedbackFormGroup>\n            <PasswordWrapper>\n              <StyleInputRegistration\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"password\"\n              />\n              <ToggleShowPasword onClick={toggleShowPassword}>\n                {showPassword ? <BsEyeSlash /> : <BsEye />}\n              </ToggleShowPasword>\n            </PasswordWrapper>\n            <StyleErrorMessage name=\"password\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <Btnwrapper>\n            <BtnRegistration type=\"submit\">Sign in</BtnRegistration>\n          </Btnwrapper>\n          <Link to=\"/Registration\">\n            <LinkOnPageLogIn>No account? Sign up</LinkOnPageLogIn>\n          </Link>\n        </StyleFormLogin>\n      </Formik>\n    </>\n  );\n};\n\nexport default FormLogin;\n","import styled from 'styled-components';\nimport backgroundImage from '../../images/photoBg.jpg';\n\nexport const LoginPageSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nexport const LoginPageWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n","import FormLogin from 'components/MainForm/FormLogin/FormLogin';\nimport { LoginPageWrapper } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <LoginPageWrapper>\n        <FormLogin />\n      </LoginPageWrapper>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["StyleFormLogin","styled","Form","LoginTitle","FeedbackFormGroup","StyleInputRegistration","Field","StyleErrorMessage","ErrorMessage","Error","PasswordWrapper","ToggleShowPasword","Btnwrapper","BtnRegistration","LinkOnPageLogIn","initialValues","email","password","schema","yup","shape","required","min","max","useState","showPassword","setShowPassword","navigate","useNavigate","dispatch","useDispatch","handleSubmit","values","resetForm","authSignInUser","console","log","validationSchema","onSubmit","type","name","placeholder","msg","onClick","prewShowPassword","to","LoginPageWrapper","backgroundImage"],"sourceRoot":""}