{"version":3,"file":"static/js/684.e2e41432.chunk.js","mappings":"yNAEaA,EAA0BC,EAAAA,GAAAA,IAAH,mF,sECEvBC,GAAwBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,2OAWrBG,EAA2BH,EAAAA,GAAAA,IAAH,mNAWxBI,EAAgBJ,EAAAA,GAAAA,IAAH,wCAIbK,GAA2BL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAH,oHAQxBO,GAA4BP,EAAAA,EAAAA,IAAOQ,EAAAA,IAAPR,CAAH,mHAQzBS,EAAoBT,EAAAA,GAAAA,GAAH,8OAYjBU,EAAoBV,EAAAA,GAAAA,IAAH,8KAWjBW,GAAyBX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,6PAetBa,GAAoBb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,sBAEjBe,EAAQf,EAAAA,GAAAA,IAAH,qIAQLgB,EAAkBhB,EAAAA,GAAAA,IAAH,+CAIfiB,EAAoBjB,EAAAA,GAAAA,KAAH,kTAYjBkB,EAAalB,EAAAA,GAAAA,IAAH,gKASVmB,EAAkBnB,EAAAA,GAAAA,OAAH,gYAoBfoB,EAAkBpB,EAAAA,GAAAA,EAAH,2I,SCpHtBqB,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIC,WAClCP,MAAOG,EAAAA,KAAaI,WACpBN,SAAUE,EAAAA,KAAaE,IAAI,IAAIC,IAAI,IAAIC,aAoFzC,EAjFyB,WACvB,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAcA,OACE,+BACE,SAAC,KAAD,CACEd,cAAeA,EACfe,iBAAkBX,EAClBY,SATe,SAACC,EAAD,IACnBC,EAD8C,EAAhBA,YAE/B,EAIG,UAKE,UAACtC,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CAAeoC,QAjBC,WACxBL,GAAe,SAAAM,GAAW,OAAKA,CAAL,GAC3B,EAeS,SACGP,GACC,SAAC3B,EAAD,CAA2BmC,KAAM,MAEjC,SAACrC,EAAD,CAA0BqC,KAAM,UAItC,SAACjC,EAAD,4BACA,UAACC,EAAD,YACE,SAACC,EAAD,CACEgC,KAAK,OACLrB,KAAK,OACLsB,YAAY,UAEd,SAAC/B,EAAD,CAAmBS,KAAK,OAAxB,SACG,SAAAuB,GAAG,OAAI,SAAC9B,EAAD,UAAQ8B,GAAZ,QAGR,UAACnC,EAAD,YACE,SAACC,EAAD,CACEgC,KAAK,QACLrB,KAAK,QACLsB,YAAY,WAEd,SAAC/B,EAAD,CAAmBS,KAAK,QAAxB,SACG,SAAAuB,GAAG,OAAI,SAAC9B,EAAD,UAAQ8B,GAAZ,QAGR,UAACnC,EAAD,YACE,UAACM,EAAD,YACE,SAACL,EAAD,CACEgC,KAAMX,EAAe,OAAS,WAC9BV,KAAK,WACLsB,YAAY,cAEd,SAAC3B,EAAD,CAAmBuB,QAzDJ,WACzBP,GAAgB,SAAAa,GAAgB,OAAKA,CAAL,GACjC,EAuDW,SACGd,GAAe,SAAC,MAAD,KAAiB,SAAC,MAAD,UAGrC,SAACnB,EAAD,CAAmBS,KAAK,WAAxB,SACG,SAAAuB,GAAG,OAAI,SAAC9B,EAAD,UAAQ8B,GAAZ,QAGR,SAAC3B,EAAD,WACE,SAACC,EAAD,CAAiBwB,KAAK,SAAtB,6BAEF,SAAC,KAAD,CAAMI,GAAG,SAAT,UACE,SAAC3B,EAAD,uDAMX,ECvGD,EARyB,WACvB,OACE,SAACrB,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["pages/RegistrationPage/RegistrationPage.styled.js","components/MainForm/FormRegistration/FormRegistration.styled.js","components/MainForm/FormRegistration/FormRegistration.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegistrationPageWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { AiOutlinePlusCircle, AiOutlineMinusCircle } from 'react-icons/ai';\n\nexport const StyleFormRegistration = styled(Form)`\n  position: relative;\n  width: 100%;\n  background-image: var(--background-body);\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 45px;\n  padding-top: 92px;\n  border-radius: 70px 70px 0 0;\n`;\n\nexport const RegistrationImgContainer = styled.div`\n  position: absolute;\n  top: -70px;\n  left: 50%;\n  transform: translate(-50%);\n  width: 130px;\n  height: 120px;\n  background-image: var(--background-body);\n  border-radius: 16px;\n`;\n\nexport const IconContainer = styled.div`\n  width: 100%;\n`;\n\nexport const StyleAiOutlinePlusCircle = styled(AiOutlinePlusCircle)`\n  position: absolute;\n  bottom: 10px;\n  right: -15px;\n  fill: gold;\n  cursor: pointer;\n`;\n\nexport const StyleAiOutlineMinusCircle = styled(AiOutlineMinusCircle)`\n  position: absolute;\n  bottom: 10px;\n  right: -15px;\n  fill: red;\n  cursor: pointer;\n`;\n\nexport const RegistrationTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 30px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: var(--color);\n  text-transform: uppercase;\n  margin-bottom: 35px;\n`;\n\nexport const FeedbackFormGroup = styled.div`\n  max-width: 545px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  &:nth-last-of-type(2) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const StyleInputRegistration = styled(Field)`\n  width: 100%;\n  display: flex;\n  padding: 16px;\n  background-color: #f6f6f6;\n  border: 1px solid #e8e8e8;\n  border-radius: 8px;\n\n  &::placeholder {\n    font-size: 16px;\n    line-height: 19px;\n    color: #bdbdbd;\n  }\n`;\n\nexport const StyleErrorMessage = styled(ErrorMessage)``;\n\nexport const Error = styled.div`\n  color: red;\n  font-size: 15px;\n  margin-top: 10px;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ToggleShowPasword = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translate(-50%, -10px);\n  -webkit-transform: translate(-50%, -10px);\n  -moz-transform: translate(-50%, -10px);\n  -ms-transform: translate(-50%, -10px);\n  -o-transform: translate(-50%, -10px);\n  cursor: pointer;\n`;\n\nexport const Btnwrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 545px;\n`;\n\nexport const BtnRegistration = styled.button`\n  width: 100%;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  background-color: #ff6c00;\n  border-radius: 100px;\n  font-size: 16px;\n  line-height: 1.19;\n  color: #ffffff;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.4s;\n  margin-bottom: 15px;\n\n  &:hover {\n    background-color: #ff4c00;\n  }\n`;\n\nexport const LinkOnPageLogIn = styled.p`\n  text-align: center;\n  cursor: pointer;\n  color: #f6f6f6;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport * as yup from 'yup';\nimport {\n  StyleFormRegistration,\n  RegistrationImgContainer,\n  IconContainer,\n  StyleAiOutlinePlusCircle,\n  StyleAiOutlineMinusCircle,\n  RegistrationTitle,\n  FeedbackFormGroup,\n  StyleInputRegistration,\n  StyleErrorMessage,\n  Error,\n  PasswordWrapper,\n  ToggleShowPasword,\n  Btnwrapper,\n  BtnRegistration,\n  LinkOnPageLogIn,\n} from './FormRegistration.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().min(4).max(20).required(),\n  email: yup.string().required(),\n  password: yup.string().min(10).max(20).required(),\n});\n\nconst FormRegistration = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [dowmloadImg, setDownloadImg] = useState(false);\n\n  const toggleShowPassword = () => {\n    setShowPassword(prewShowPassword => !prewShowPassword);\n  };\n\n  const toggleDownloadImg = () => {\n    setDownloadImg(prewShowImg => !prewShowImg);\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyleFormRegistration>\n          <RegistrationImgContainer>\n            <IconContainer onClick={toggleDownloadImg}>\n              {dowmloadImg ? (\n                <StyleAiOutlineMinusCircle size={30} />\n              ) : (\n                <StyleAiOutlinePlusCircle size={30} />\n              )}\n            </IconContainer>\n          </RegistrationImgContainer>\n          <RegistrationTitle>Registration</RegistrationTitle>\n          <FeedbackFormGroup>\n            <StyleInputRegistration\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"name\"\n            ></StyleInputRegistration>\n            <StyleErrorMessage name=\"name\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <FeedbackFormGroup>\n            <StyleInputRegistration\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n            />\n            <StyleErrorMessage name=\"email\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <FeedbackFormGroup>\n            <PasswordWrapper>\n              <StyleInputRegistration\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"password\"\n              />\n              <ToggleShowPasword onClick={toggleShowPassword}>\n                {showPassword ? <BsEyeSlash /> : <BsEye />}\n              </ToggleShowPasword>\n            </PasswordWrapper>\n            <StyleErrorMessage name=\"password\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <Btnwrapper>\n            <BtnRegistration type=\"submit\">Registration</BtnRegistration>\n          </Btnwrapper>\n          <Link to=\"/Login\">\n            <LinkOnPageLogIn>Already have an account? Sign in</LinkOnPageLogIn>\n          </Link>\n        </StyleFormRegistration>\n      </Formik>\n    </>\n  );\n};\n\nexport default FormRegistration;\n","import { RegistrationPageWrapper } from './RegistrationPage.styled';\nimport FormRegistration from 'components/MainForm/FormRegistration/FormRegistration';\n\nconst RegistrationPage = () => {\n  return (\n    <RegistrationPageWrapper>\n      <FormRegistration />\n    </RegistrationPageWrapper>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RegistrationPageWrapper","styled","StyleFormRegistration","Form","RegistrationImgContainer","IconContainer","StyleAiOutlinePlusCircle","AiOutlinePlusCircle","StyleAiOutlineMinusCircle","AiOutlineMinusCircle","RegistrationTitle","FeedbackFormGroup","StyleInputRegistration","Field","StyleErrorMessage","ErrorMessage","Error","PasswordWrapper","ToggleShowPasword","Btnwrapper","BtnRegistration","LinkOnPageLogIn","initialValues","name","email","password","schema","yup","shape","min","max","required","useState","showPassword","setShowPassword","dowmloadImg","setDownloadImg","validationSchema","onSubmit","values","resetForm","onClick","prewShowImg","size","type","placeholder","msg","prewShowPassword","to"],"sourceRoot":""}