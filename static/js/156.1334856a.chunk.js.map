{"version":3,"file":"static/js/156.1334856a.chunk.js","mappings":"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","sources":["components/AppNavigation/AppNavigation.styled.js","components/AppNavigation/AppNavigation.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { TfiLayoutGrid3 } from 'react-icons/tfi';\nimport { CgProfile } from 'react-icons/cg';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyleNavigation = styled.nav`\n  position: fixed;\n  margin-left: auto;\n  margin-right: auto;\n  bottom: 10px;\n  left: 10px;\n  right: 10px;\n  z-index: 5;\n  background-color: rgba(0, 128, 0, 0.4);\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.6);\n`;\nexport const NavigationList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n`;\n\nexport const NavigatiomItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const StyleCgProfile = styled(CgProfile)`\n  fill: currentColor;\n  transition: 0.4s;\n\n  &:hover {\n    color: aqua;\n  }\n`;\n\nexport const StyleAiOutlinePlus = styled(AiOutlinePlus)`\n  fill: currentColor;\n  transition: 0.4s;\n\n  &:hover {\n    fill: aqua;\n  }\n`;\n\nexport const StyleTfiLayoutGrid3 = styled(TfiLayoutGrid3)`\n  fill: currentColor;\n  transition: 0.4s;\n\n  &:hover {\n    fill: aqua;\n  }\n`;\n\nexport const StyleNavigationLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: gold;\n  border: 1px solid gold;\n  border-radius: 5px;\n  padding: 3px;\n  width: 100%;\n  transition: background-color 0.4s;\n\n  &:hover {\n    border-color: aqua;\n  }\n\n  &.active {\n    color: aqua;\n    border-color: aqua;\n\n    > ${StyleCgProfile}, > ${StyleAiOutlinePlus}, > ${StyleTfiLayoutGrid3} {\n      fill: aqua;\n    }\n  }\n`;\n","import Container from 'components/Container/Container';\nimport {\n  StyleNavigationLink,\n  StyleNavigation,\n  NavigationList,\n  NavigatiomItem,\n  StyleCgProfile,\n  StyleAiOutlinePlus,\n  StyleTfiLayoutGrid3,\n} from './AppNavigation.styled';\nconst AppNavigation = () => {\n  return (\n    <Container>\n      <StyleNavigation>\n        <NavigationList>\n          <NavigatiomItem>\n            <StyleNavigationLink to=\"/Home\">\n              <StyleCgProfile size={30} />\n            </StyleNavigationLink>\n          </NavigatiomItem>\n          <NavigatiomItem>\n            <StyleNavigationLink to=\"/create-post\">\n              <StyleAiOutlinePlus size={30} />\n            </StyleNavigationLink>\n          </NavigatiomItem>\n          <NavigatiomItem>\n            <StyleNavigationLink to=\"/Posts\">\n              <StyleTfiLayoutGrid3 size={30} />\n            </StyleNavigationLink>\n          </NavigatiomItem>\n        </NavigationList>\n      </StyleNavigation>\n    </Container>\n  );\n};\n\nexport default AppNavigation;\n","import styled from 'styled-components';\n\nexport const StyleContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n","import { StyleContainer } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <StyleContainer>{children}</StyleContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\nimport { BiLogOut } from 'react-icons/bi';\nimport { AiOutlineMinusCircle, AiFillLike } from 'react-icons/ai';\nimport { FaComment } from 'react-icons/fa';\nimport { CiLocationOn } from 'react-icons/ci';\n\nexport const NoPostBlock = styled.p`\n  margin-top: 20px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 35px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: green;\n  text-shadow: 1px 1px 10px orange;\n`;\n\nexport const HeaderProfile = styled.div`\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  right: 10px;\n  z-index: 20;\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.2);\n`;\n\nexport const HeaderProfileTitle = styled.h3`\n  width: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  text-transform: uppercase;\n  text-shadow: 0px 0px 20px #28a745;\n  color: #28a745;\n  letter-spacing: 2px;\n`;\n\nexport const LogoutWrapper = styled.div`\n  margin-right: 10px;\n  cursor: pointer;\n`;\n\nexport const StyleBiLogOut = styled(BiLogOut)`\n  fill: #28a745;\n  transition: 0.4s;\n\n  &:hover {\n    fill: #ff4c00;\n  }\n`;\n\nexport const MainPostProfileWrapper = styled.div`\n  margin-top: 75px;\n  max-height: 600px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 0.5em;\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: transparent;\n  }\n`;\n\nexport const UserPhotoWrapper = styled.div`\n  position: relative;\n  max-width: 250px;\n  height: 250px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n  padding: 5px;\n  background-image: var(--background-body);\n  border-radius: 25px;\n`;\n\nexport const InputFileChange = styled.input`\n  position: absolute;\n  opacity: 0;\n  width: 0;\n  height: 0;\n`;\n\nexport const StyleAiOutlineMinusCircle = styled(AiOutlineMinusCircle)`\n  position: absolute;\n  bottom: 10px;\n  right: -15px;\n  fill: red;\n  cursor: pointer;\n`;\n\nexport const BtnUpdateAvatar = styled.button`\n  position: absolute;\n  bottom: 10px;\n  border: none;\n  background-color: rgba(0, 0, 0, 0.4);\n  color: aqua;\n  font-weight: bold;\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: var(--transition);\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.7);\n    color: var(--color);\n  }\n`;\n\nexport const NameUser = styled.p`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 30px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: aqua;\n  text-shadow: 0px 0px 10px #000;\n`;\n\nexport const ImgUserAvatar = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 20px;\n  box-shadow: 0px 0px 40px 10px rgba(10, 216, 244, 0.4);\n`;\n\nexport const EmailUser = styled.p`\n  text-align: center;\n  font-size: 20px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: green;\n  text-shadow: 1px 1px 10px orange;\n  margin-bottom: 10px;\n`;\n\nexport const ProfilPostList = styled.ul`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 25px;\n  margin-bottom: 140px;\n`;\n\nexport const ProfilListItem = styled.li`\n  width: 100%;\n  max-width: 320px;\n  height: 320px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.6);\n`;\n\nexport const ImgPostProfile = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 10px;\n`;\n\nexport const ProfilePostTitle = styled.h3`\n  margin-top: 2px;\n  margin-bottom: 5px;\n  font-size: 14px;\n  font-weight: 700;\n  color: gold;\n  text-shadow: 0px 0px 3px #000;\n`;\n\nexport const PanelPostList = styled.ul`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nexport const PanelPostItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n\n  &:first-child {\n    margin-right: 30px;\n  }\n\n  &:last-child {\n    margin-left: auto;\n  }\n`;\n\nexport const CountLike = styled.span`\n  margin-left: 5px;\n  font-size: 19px;\n  font-weight: bold;\n  text-shadow: 0px 0px 7px #000;\n  color: aqua;\n  letter-spacing: 2px;\n`;\n\nexport const CommentCount = styled.span`\n  margin-left: 5px;\n  font-size: 19px;\n  font-weight: bold;\n  text-shadow: 0px 0px 7px #000;\n  color: aqua;\n  letter-spacing: 2px;\n`;\n\nexport const StyleFaRegComment = styled(FaComment)`\n  cursor: pointer;\n`;\n\nexport const StyleSlLike = styled(AiFillLike)`\n  cursor: pointer;\n`;\n\nexport const StyleCiLocationOn = styled(CiLocationOn)`\n  cursor: pointer;\n`;\n","import {\n  NoPostBlock,\n  HeaderProfile,\n  HeaderProfileTitle,\n  LogoutWrapper,\n  StyleBiLogOut,\n  MainPostProfileWrapper,\n  UserPhotoWrapper,\n  InputFileChange,\n  StyleAiOutlineMinusCircle,\n  BtnUpdateAvatar,\n  NameUser,\n  ImgUserAvatar,\n  EmailUser,\n  ProfilPostList,\n  ProfilListItem,\n  ImgPostProfile,\n  ProfilePostTitle,\n  PanelPostList,\n  PanelPostItem,\n  StyleFaRegComment,\n  CommentCount,\n  StyleSlLike,\n  CountLike,\n  StyleCiLocationOn,\n} from './HomePage.styled';\nimport { authSignOutUser } from 'redux/auth/authOperation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport Container from 'components/Container/Container';\nimport AppNavigation from 'components/AppNavigation/AppNavigation';\nimport authSelector from 'redux/auth/authSelector';\nimport { authSlice } from 'redux/auth/authReducers';\nimport { useState, useEffect } from 'react';\nimport { getDownloadURL, ref, uploadBytes } from 'firebase/storage';\nimport { storage, auth, firestore } from '../../firebase/config';\nimport {\n  collection,\n  query,\n  getDocs,\n  where,\n  orderBy,\n  doc,\n  getDoc,\n  updateDoc,\n  onSnapshot,\n} from 'firebase/firestore';\nimport { updateProfile } from 'firebase/auth';\nimport { toast } from 'react-toastify';\n\nconst HomePage = () => {\n  const [posts, setPost] = useState([]);\n  const [postLikes, setPostLikes] = useState({});\n  const [commentCounts, setCommentCounts] = useState({});\n  const [selectedAvatar, setSelectedAvatar] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const name = useSelector(authSelector.getName);\n  const email = useSelector(authSelector.getEmail);\n  const avatar = useSelector(authSelector.getAvatar);\n  const userId = useSelector(authSelector.getUserId);\n\n  useEffect(() => {\n    const fetchCommentCounts = async () => {\n      const commentCountsMap = {};\n\n      for (const post of posts) {\n        const postRef = doc(firestore, 'userPost', post.id);\n        const commentsCollectionRef = collection(postRef, 'comments');\n        const commentsQuery = query(commentsCollectionRef);\n        const snapshot = await getDocs(commentsQuery);\n        const commentCount = snapshot.size;\n        commentCountsMap[post.id] = commentCount;\n      }\n      setCommentCounts(commentCountsMap);\n    };\n\n    fetchCommentCounts();\n  }, [posts]);\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(\n      collection(firestore, 'userPost'),\n      snapshot => {\n        const updatedPostLikes = {};\n\n        snapshot.forEach(doc => {\n          const postId = doc.id;\n          const postLikesData = doc.data().likedByUser || {};\n          updatedPostLikes[postId] = postLikesData;\n        });\n\n        setPostLikes(updatedPostLikes);\n      }\n    );\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchPostById = async () => {\n      const postCollectionIdRef = collection(firestore, 'userPost');\n      const postQueryId = query(\n        postCollectionIdRef,\n        where('userId', '==', userId),\n        orderBy('createdAt')\n      );\n      const snapshot = await getDocs(postQueryId);\n      const fetchedPostId = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setPost(fetchedPostId.reverse());\n    };\n    fetchPostById();\n  }, [userId]);\n\n  const handleAvatarChange = e => {\n    const file = e.target.files[0];\n    setSelectedAvatar(file);\n  };\n\n  const updateAvatar = async () => {\n    try {\n      if (selectedAvatar) {\n        // Создаем ссылку для загрузки файла в Firebase Storage\n        const storageRef = ref(storage, 'userAvatar/' + userId);\n\n        // Загружаем файл в Storage\n        await uploadBytes(storageRef, selectedAvatar);\n\n        // Получаем URL загруженного файла\n        const downloadURL = await getDownloadURL(storageRef);\n\n        // Обновляем аватар пользователя в Firebase Authentication\n        await updateProfile(auth.currentUser, {\n          photoURL: downloadURL,\n        });\n\n        // Обновляем аватар пользователя в Redux Store\n        dispatch(authSlice.actions.updateAvatar(downloadURL));\n\n        // Сбрасываем выбранный аватар\n        setSelectedAvatar(null);\n\n        // Отображаем уведомление об успешном обновлении аватара\n        toast.success('Avatar updated successfully.');\n      }\n    } catch (error) {\n      console.log('Error updating avatar:', error);\n      Notiflix.Notify.failure('Failed to update avatar. Please try again.');\n    }\n  };\n\n  const handleLike = async postId => {\n    try {\n      const userId = auth.currentUser.uid;\n      const postRef = doc(firestore, 'userPost', postId);\n      const postSnapshot = await getDoc(postRef);\n      const postData = postSnapshot.data();\n      const currentLikes = postData.likes || 0;\n      const likedByUser = postData.likedByUser && postData.likedByUser[userId];\n\n      const isLiked = likedByUser === true;\n\n      let updatedLikes;\n      let updatedLikedByUser;\n\n      if (isLiked) {\n        updatedLikes = currentLikes - 1;\n        updatedLikedByUser = { ...postData.likedByUser };\n        delete updatedLikedByUser[userId];\n      } else {\n        updatedLikes = currentLikes + 1;\n        updatedLikedByUser = { ...postData.likedByUser, [userId]: true };\n      }\n\n      const updateData = {\n        likes: updatedLikes,\n        likedByUser: updatedLikedByUser,\n      };\n\n      await updateDoc(postRef, updateData);\n\n      setPost(prevPosts =>\n        prevPosts.map(post => {\n          if (post.id === postId) {\n            return {\n              ...post,\n              likes: updatedLikes,\n              likedByUser: updatedLikedByUser,\n            };\n          }\n          return post;\n        })\n      );\n    } catch (error) {\n      console.log('Ошибка при обновлении лайка:', error);\n    }\n  };\n\n  const logOut = () => {\n    Notiflix.Confirm.show(\n      'Confirmation',\n      'Are you sure you want to log out?',\n      'Yes',\n      'No',\n      () => {\n        dispatch(authSignOutUser());\n        navigate('/Login');\n      },\n      () => {}\n    );\n  };\n\n  return (\n    <Container>\n      <HeaderProfile>\n        <HeaderProfileTitle>Profile</HeaderProfileTitle>\n        <LogoutWrapper>\n          <StyleBiLogOut size={30} onClick={logOut} />\n        </LogoutWrapper>\n      </HeaderProfile>\n      <MainPostProfileWrapper>\n        <NameUser>{name}</NameUser>\n        <UserPhotoWrapper>\n          <ImgUserAvatar src={avatar} alt=\"userAvatar\" />\n          <label htmlFor=\"inputFile\">\n            <StyleAiOutlineMinusCircle size={30} />\n          </label>\n          <InputFileChange\n            type=\"file\"\n            accept=\"image/*\"\n            id=\"inputFile\"\n            onChange={handleAvatarChange}\n          />\n          <BtnUpdateAvatar onClick={updateAvatar}>Update Foto</BtnUpdateAvatar>\n        </UserPhotoWrapper>\n        <EmailUser>{email}</EmailUser>\n        {posts.length === 0 ? (\n          <NoPostBlock>No posts found.</NoPostBlock>\n        ) : (\n          <ProfilPostList>\n            {posts.map(post => (\n              <ProfilListItem key={post.id}>\n                <ImgPostProfile src={post.imageURL} alt=\"Post\" loading=\"lazy\" />\n                <ProfilePostTitle>{post.title}</ProfilePostTitle>\n                <PanelPostList>\n                  <PanelPostItem>\n                    <Link to={`/comments/${post.id}`}>\n                      <StyleFaRegComment size={30} color=\"aqua\" />\n                      <CommentCount>{commentCounts[post.id]}</CommentCount>\n                    </Link>\n                  </PanelPostItem>\n                  <PanelPostItem>\n                    <StyleSlLike\n                      size={30}\n                      color={postLikes[post.id] ? 'aqua' : 'gold'}\n                      onClick={() => handleLike(post.id, post.userId)}\n                    />\n                    <CountLike>\n                      {postLikes[post.id] ? post.likes : postLikes[post.id]}\n                    </CountLike>\n                  </PanelPostItem>\n                  <PanelPostItem>\n                    <StyleCiLocationOn size={30} color=\"aqua\" />\n                  </PanelPostItem>\n                </PanelPostList>\n              </ProfilListItem>\n            ))}\n          </ProfilPostList>\n        )}\n        <AppNavigation />\n      </MainPostProfileWrapper>\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"names":["StyleNavigation","styled","NavigationList","NavigatiomItem","StyleCgProfile","CgProfile","StyleAiOutlinePlus","AiOutlinePlus","StyleTfiLayoutGrid3","TfiLayoutGrid3","StyleNavigationLink","NavLink","Container","to","size","StyleContainer","children","NoPostBlock","HeaderProfile","HeaderProfileTitle","LogoutWrapper","StyleBiLogOut","BiLogOut","MainPostProfileWrapper","UserPhotoWrapper","InputFileChange","StyleAiOutlineMinusCircle","AiOutlineMinusCircle","BtnUpdateAvatar","NameUser","ImgUserAvatar","EmailUser","ProfilPostList","ProfilListItem","ImgPostProfile","ProfilePostTitle","PanelPostList","PanelPostItem","CountLike","CommentCount","StyleFaRegComment","FaComment","StyleSlLike","AiFillLike","StyleCiLocationOn","CiLocationOn","useState","posts","setPost","postLikes","setPostLikes","commentCounts","setCommentCounts","selectedAvatar","setSelectedAvatar","dispatch","useDispatch","navigate","useNavigate","name","useSelector","authSelector","email","avatar","userId","useEffect","fetchCommentCounts","commentCountsMap","post","postRef","doc","firestore","id","commentsCollectionRef","collection","commentsQuery","query","getDocs","snapshot","commentCount","unsubscribe","onSnapshot","updatedPostLikes","forEach","postId","postLikesData","data","likedByUser","fetchPostById","postCollectionIdRef","postQueryId","where","orderBy","fetchedPostId","docs","map","reverse","updateAvatar","storageRef","ref","storage","uploadBytes","getDownloadURL","downloadURL","updateProfile","auth","photoURL","authSlice","toast","console","log","Notiflix","handleLike","getDoc","postSnapshot","postData","currentLikes","likes","updatedLikes","updatedLikedByUser","updateData","updateDoc","prevPosts","onClick","authSignOutUser","src","alt","htmlFor","type","accept","onChange","e","file","target","files","length","imageURL","loading","title","color","AppNavigation"],"sourceRoot":""}