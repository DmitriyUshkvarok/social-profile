{"version":3,"file":"static/js/847.488dcb83.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","pages/CommentPage/CommentPage.styled.js","pages/CommentPage/CommentPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyleContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n","import { StyleContainer } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <StyleContainer>{children}</StyleContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\nimport { HiArrowLeftCircle } from 'react-icons/hi2';\nimport { TfiCommentsSmiley } from 'react-icons/tfi';\n\nexport const HeaderCommentPost = styled.div`\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  right: 10px;\n  z-index: 20;\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.2);\n`;\n\nexport const HeaderCommentPostTitle = styled.h3`\n  width: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  text-transform: uppercase;\n  text-shadow: 0px 0px 20px #28a745;\n  color: #28a745;\n  letter-spacing: 2px;\n`;\n\nexport const BtnBackCommentPostWrapper = styled.div`\n  margin-right: 10px;\n  cursor: pointer;\n`;\n\nexport const StyleHiArrowLeftCircle = styled(HiArrowLeftCircle)`\n  margin-left: 10px;\n  fill: gold;\n  transition: fill 0.4s;\n\n  &:hover {\n    fill: aqua;\n  }\n`;\n\nexport const MainPostProfileWrapper = styled.div`\n  margin-top: 80px;\n  max-height: 530px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 0.5em;\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: transparent;\n  }\n`;\n\nexport const CommentPostInfo = styled.div`\n  /* margin-top: 90px; */\n  width: 100%;\n  max-width: 600px;\n  height: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CommentPostImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  margin-bottom: 10px;\n  border-radius: 5px;\n`;\n\nexport const CommentPostTitle = styled.h3`\n  font-weight: 500;\n  font-size: 35px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: green;\n  text-shadow: 1px 1px 10px orange;\n`;\n\nexport const CommentList = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-top: 40px;\n`;\n\nexport const CommentListItem = styled.li`\n  display: flex;\n  width: 100%;\n  gap: 10px;\n\n  &:nth-child(even) {\n    flex-direction: row-reverse;\n  }\n`;\n\nexport const UserAvatarCommentWrapper = styled.div``;\nexport const UserImgComment = styled.img`\n  object-fit: cover;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n`;\n\nexport const InfoCommentWrapper = styled.div`\n  width: 100%;\n  max-width: 600px;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nexport const UserCommentName = styled.p`\n  font-size: 20px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: aqua;\n  text-shadow: 1px 1px 10px orange;\n  margin-bottom: 15px;\n`;\n\nexport const UserComment = styled.p`\n  font-size: 16px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: gold;\n  text-shadow: 1px 1px 10px orange;\n  margin-bottom: 10px;\n`;\n\nexport const UserCommentData = styled.p`\n  display: flex;\n  justify-content: flex-end;\n  text-shadow: 1px 1px 10px orange;\n  color: #bdbdbd;\n  font-size: 14px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n`;\n\nexport const CommentFormWrapper = styled.div`\n  position: fixed;\n  margin-left: auto;\n  margin-right: auto;\n  bottom: 10px;\n  left: 10px;\n  right: 10px;\n  z-index: 5;\n  background-color: rgba(0, 128, 0, 0.4);\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.6);\n`;\n\nexport const FedbackComment = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 800px;\n  height: 60px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n`;\n\nexport const CommentInput = styled.input`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px;\n  padding-right: 50px;\n  color: gold;\n  font-size: 18px;\n  background-color: transparent;\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.7);\n  border: none;\n  border-radius: 10px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const StyleTfiCommentsSmiley = styled(TfiCommentsSmiley)`\n  fill: gold;\n`;\n\nexport const CommentButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  right: 30px;\n  background-color: green;\n  border: 1px solid gold;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: 0.4s;\n\n  &:hover {\n    background-color: aqua;\n    border-color: green;\n\n    > ${StyleTfiCommentsSmiley} {\n      fill: green;\n    }\n  }\n`;\n","import Container from 'components/Container/Container';\nimport authSelector from 'redux/auth/authSelector';\nimport { authSlice } from 'redux/auth/authReducers';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { format } from 'date-fns';\nimport {\n  collection,\n  query,\n  getDocs,\n  onSnapshot,\n  doc,\n  addDoc,\n  orderBy,\n} from 'firebase/firestore';\nimport { firestore } from '../../firebase/config';\nimport {\n  HeaderCommentPost,\n  BtnBackCommentPostWrapper,\n  StyleHiArrowLeftCircle,\n  HeaderCommentPostTitle,\n  MainPostProfileWrapper,\n  CommentPostInfo,\n  CommentPostImg,\n  CommentPostTitle,\n  CommentList,\n  CommentListItem,\n  UserAvatarCommentWrapper,\n  UserImgComment,\n  InfoCommentWrapper,\n  UserCommentName,\n  UserComment,\n  UserCommentData,\n  CommentFormWrapper,\n  FedbackComment,\n  CommentInput,\n  CommentButton,\n  StyleTfiCommentsSmiley,\n} from './CommentPage.styled';\n\nconst CommentPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [comment, setComment] = useState('');\n  const [allComments, setAllComments] = useState([]);\n\n  const createdAt = new Date();\n\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const name = useSelector(authSelector.getName);\n  const avatar = useSelector(authSelector.getAvatar);\n  const userId = useSelector(authSelector.getUserId);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postsCollectionRef = collection(firestore, 'userPost');\n      const postsQuery = query(postsCollectionRef, orderBy('createdAt'));\n      const snapshot = await getDocs(postsQuery);\n      const fetchedPosts = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setPosts(fetchedPosts);\n    };\n\n    fetchPosts();\n  }, []);\n\n  useEffect(() => {\n    const postRef = doc(firestore, 'userPost', id);\n    const commentsCollectionRef = collection(postRef, 'comments');\n    const commentsQuery = query(commentsCollectionRef, orderBy('createdAt'));\n\n    const unsubscribe = onSnapshot(commentsQuery, snapshot => {\n      const fetchedComments = snapshot.docs.map(doc => doc.data());\n      setAllComments(fetchedComments);\n      dispatch(\n        authSlice.actions.updateCommentCount({\n          id: id,\n          count: fetchedComments.length,\n        })\n      );\n    });\n\n    return unsubscribe;\n  }, [dispatch, id]);\n\n  const handleClickBack = () => {\n    navigate(-1);\n  };\n\n  const createComment = async () => {\n    const date = new Date();\n    const formatData = format(new Date(date), 'dd MMMM, yyyy | HH:mm');\n\n    const dbRef = doc(firestore, 'userPost', id);\n\n    await addDoc(collection(dbRef, 'comments'), {\n      comment,\n      userId,\n      name,\n      avatar,\n      formatData,\n      id,\n      createdAt,\n    });\n    setComment('');\n  };\n\n  const handleChangeComment = e => {\n    setComment(e.target.value);\n  };\n\n  const post = posts.find(post => post.id === id);\n  return (\n    <>\n      <Container>\n        <HeaderCommentPost>\n          <BtnBackCommentPostWrapper onClick={handleClickBack}>\n            <StyleHiArrowLeftCircle size={30} />\n          </BtnBackCommentPostWrapper>\n          <HeaderCommentPostTitle>Comments</HeaderCommentPostTitle>\n        </HeaderCommentPost>\n        <MainPostProfileWrapper>\n          <CommentPostInfo>\n            {post && <CommentPostImg src={post.imageURL} alt=\"postImg\" />}\n            {post && <CommentPostTitle>{post.title}</CommentPostTitle>}\n          </CommentPostInfo>\n          <CommentList>\n            {allComments.map((comment, index) => (\n              <CommentListItem key={`${comment.id}-${index}`}>\n                <UserAvatarCommentWrapper>\n                  <UserImgComment src={comment.avatar} alt=\"user avatar\" />\n                </UserAvatarCommentWrapper>\n                <InfoCommentWrapper>\n                  <UserCommentName>{comment.name}</UserCommentName>\n                  <UserComment>{comment.comment}</UserComment>\n                  <UserCommentData>{comment.formatData}</UserCommentData>\n                </InfoCommentWrapper>\n              </CommentListItem>\n            ))}\n          </CommentList>\n        </MainPostProfileWrapper>\n        <CommentFormWrapper>\n          <FedbackComment>\n            <CommentInput\n              type=\"text\"\n              value={comment}\n              name=\"comment\"\n              placeholder=\"comment\"\n              onChange={handleChangeComment}\n            />\n            <CommentButton type=\"submit\" onClick={createComment}>\n              <StyleTfiCommentsSmiley size={20} />\n            </CommentButton>\n          </FedbackComment>\n        </CommentFormWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default CommentPage;\n"],"names":["StyleContainer","styled","children","HeaderCommentPost","HeaderCommentPostTitle","BtnBackCommentPostWrapper","StyleHiArrowLeftCircle","HiArrowLeftCircle","MainPostProfileWrapper","CommentPostInfo","CommentPostImg","CommentPostTitle","CommentList","CommentListItem","UserAvatarCommentWrapper","UserImgComment","InfoCommentWrapper","UserCommentName","UserComment","UserCommentData","CommentFormWrapper","FedbackComment","CommentInput","StyleTfiCommentsSmiley","TfiCommentsSmiley","CommentButton","useState","posts","setPosts","comment","setComment","allComments","setAllComments","createdAt","Date","id","useParams","navigate","useNavigate","dispatch","useDispatch","name","useSelector","authSelector","avatar","userId","useEffect","fetchPosts","postsCollectionRef","collection","firestore","postsQuery","query","orderBy","getDocs","snapshot","fetchedPosts","docs","map","doc","data","postRef","commentsCollectionRef","commentsQuery","onSnapshot","fetchedComments","authSlice","count","length","createComment","date","formatData","format","dbRef","addDoc","post","find","Container","onClick","size","src","imageURL","alt","title","index","type","value","placeholder","onChange","e","target"],"sourceRoot":""}