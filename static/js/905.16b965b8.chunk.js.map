{"version":3,"file":"static/js/905.16b965b8.chunk.js","mappings":"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","sources":["components/AppNavigation/AppNavigation.styled.js","components/AppNavigation/AppNavigation.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/InfoUserContainer/InfoUserContainer.styled.js","components/InfoUserContainer/InfoUserContainer.jsx","pages/PostsPage/PostsPage.styled.js","pages/PostsPage/PostsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { TfiLayoutGrid3 } from 'react-icons/tfi';\nimport { CgProfile } from 'react-icons/cg';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyleNavigation = styled.nav`\n  position: fixed;\n  margin-left: auto;\n  margin-right: auto;\n  bottom: 10px;\n  left: 10px;\n  right: 10px;\n  z-index: 5;\n  background-color: rgba(0, 128, 0, 0.4);\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.6);\n`;\nexport const NavigationList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n`;\n\nexport const NavigatiomItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const StyleCgProfile = styled(CgProfile)`\n  fill: currentColor;\n  transition: 0.4s;\n\n  &:hover {\n    color: aqua;\n  }\n`;\n\nexport const StyleAiOutlinePlus = styled(AiOutlinePlus)`\n  fill: currentColor;\n  transition: 0.4s;\n\n  &:hover {\n    fill: aqua;\n  }\n`;\n\nexport const StyleTfiLayoutGrid3 = styled(TfiLayoutGrid3)`\n  fill: currentColor;\n  transition: 0.4s;\n\n  &:hover {\n    fill: aqua;\n  }\n`;\n\nexport const StyleNavigationLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: gold;\n  border: 1px solid gold;\n  border-radius: 5px;\n  padding: 3px;\n  width: 100%;\n  transition: background-color 0.4s;\n\n  &:hover {\n    border-color: aqua;\n  }\n\n  &.active {\n    color: aqua;\n    border-color: aqua;\n\n    > ${StyleCgProfile}, > ${StyleAiOutlinePlus}, > ${StyleTfiLayoutGrid3} {\n      fill: aqua;\n    }\n  }\n`;\n","import Container from 'components/Container/Container';\nimport {\n  StyleNavigationLink,\n  StyleNavigation,\n  NavigationList,\n  NavigatiomItem,\n  StyleCgProfile,\n  StyleAiOutlinePlus,\n  StyleTfiLayoutGrid3,\n} from './AppNavigation.styled';\nconst AppNavigation = () => {\n  return (\n    <Container>\n      <StyleNavigation>\n        <NavigationList>\n          <NavigatiomItem>\n            <StyleNavigationLink to=\"/Home\">\n              <StyleCgProfile size={30} />\n            </StyleNavigationLink>\n          </NavigatiomItem>\n          <NavigatiomItem>\n            <StyleNavigationLink to=\"/create-post\">\n              <StyleAiOutlinePlus size={30} />\n            </StyleNavigationLink>\n          </NavigatiomItem>\n          <NavigatiomItem>\n            <StyleNavigationLink to=\"/Posts\">\n              <StyleTfiLayoutGrid3 size={30} />\n            </StyleNavigationLink>\n          </NavigatiomItem>\n        </NavigationList>\n      </StyleNavigation>\n    </Container>\n  );\n};\n\nexport default AppNavigation;\n","import styled from 'styled-components';\n\nexport const StyleContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n","import { StyleContainer } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <StyleContainer>{children}</StyleContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const InfoUserBlock = styled.div`\n  max-width: 300px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const PhotoUserContainer = styled.div`\n  width: 90px;\n  height: 90px;\n  border-radius: 16px;\n  background-color: transparent;\n`;\n\nexport const InfoUserPhoto = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 16px;\n`;\n\nexport const InfoTextUserWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const InfoUserName = styled.p`\n  font-weight: 700;\n  font-size: 13px;\n  line-height: 1.15;\n  color: aqua;\n  text-shadow: 0px 0px 5px #ffffff;\n`;\n\nexport const InfoUserEmail = styled.p`\n  font-size: 11px;\n  line-height: 1.15;\n  color: rgba(23, 23, 23, 0.8);\n  text-shadow: 0px 0px 5px #ffffff;\n`;\n","import { useSelector } from 'react-redux';\nimport authSelector from 'redux/auth/authSelector';\nimport {\n  InfoUserBlock,\n  PhotoUserContainer,\n  InfoUserPhoto,\n  InfoTextUserWrapper,\n  InfoUserName,\n  InfoUserEmail,\n} from './InfoUserContainer.styled';\n\nconst InfoUserContainer = () => {\n  const name = useSelector(authSelector.getName);\n  const email = useSelector(authSelector.getEmail);\n  const avatar = useSelector(authSelector.getAvatar);\n\n  return (\n    <InfoUserBlock>\n      <PhotoUserContainer>\n        <InfoUserPhoto src={avatar}></InfoUserPhoto>\n      </PhotoUserContainer>\n      <InfoTextUserWrapper>\n        <InfoUserName>{name}</InfoUserName>\n        <InfoUserEmail>{email}</InfoUserEmail>\n      </InfoTextUserWrapper>\n    </InfoUserBlock>\n  );\n};\n\nexport default InfoUserContainer;\n","import styled from 'styled-components';\nimport { BiLogOut } from 'react-icons/bi';\nimport { FaComment } from 'react-icons/fa';\nimport { AiFillLike } from 'react-icons/ai';\nimport { CiLocationOn } from 'react-icons/ci';\n\nexport const NoPostBlock = styled.p`\n  margin-top: 20px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 35px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: green;\n  text-shadow: 1px 1px 10px orange;\n`;\n\nexport const HeaderPosts = styled.div`\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  right: 10px;\n  z-index: 20;\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.2);\n`;\n\nexport const HeaderPostsTitle = styled.h3`\n  width: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  text-transform: uppercase;\n  text-shadow: 0px 0px 20px #28a745;\n  color: #28a745;\n  letter-spacing: 2px;\n`;\n\nexport const LogoutWrapper = styled.div`\n  margin-right: 10px;\n  cursor: pointer;\n`;\n\nexport const StyleBiLogOut = styled(BiLogOut)`\n  fill: #28a745;\n  transition: 0.4s;\n\n  &:hover {\n    fill: #ff4c00;\n  }\n`;\n\nexport const InfoUserPost = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 200px;\n  margin-bottom: 5px;\n`;\n\nexport const InfoUserAvatar = styled.img`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-right: 5px;\n`;\n\nexport const InfoUserName = styled.p`\n  font-size: 14px;\n  font-weight: bold;\n  text-shadow: 0px 0px 5px #ffffff;\n  color: aqua;\n  letter-spacing: 2px;\n`;\n\nexport const MainPostWrapper = styled.div`\n  margin-top: 80px;\n  padding: 10px;\n  max-height: 600px;\n  overflow-y: auto;\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.2);\n\n  &::-webkit-scrollbar {\n    width: 0.5em;\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: transparent;\n  }\n`;\n\nexport const InfoUserWrapp = styled.div`\n  margin-left: 50px;\n`;\n\nexport const PostListWrapper = styled.div`\n  margin-top: 50px;\n  margin-bottom: 110px;\n`;\n\nexport const PostList = styled.ul`\n  width: 100%;\n  padding-left: 10px;\n  padding-right: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const PostListItem = styled.li`\n  width: 100%;\n  max-width: 900px;\n  border-radius: 30px;\n  min-height: 400px;\n`;\n\nexport const PostListPhoto = styled.img`\n  width: 100%;\n  object-fit: cover;\n  border-radius: 30px;\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.4);\n`;\n\nexport const PostTitle = styled.p`\n  margin-top: 10px;\n  font-size: 18px;\n  font-weight: 700;\n  color: gold;\n  text-shadow: 0px 0px 3px #000;\n`;\n\nexport const PanelPostList = styled.ul`\n  display: flex;\n  align-items: center;\n  margin-top: 30px;\n`;\n\nexport const PanelPostItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n\n  &:first-child {\n    margin-right: 30px;\n  }\n\n  &:last-child {\n    margin-left: auto;\n  }\n`;\n\nexport const CountLike = styled.span`\n  margin-left: 5px;\n  font-size: 19px;\n  font-weight: bold;\n  text-shadow: 0px 0px 7px #000;\n  color: aqua;\n  letter-spacing: 2px;\n`;\n\nexport const CommentCount = styled.span`\n  margin-left: 5px;\n  font-size: 19px;\n  font-weight: bold;\n  text-shadow: 0px 0px 7px #000;\n  color: aqua;\n  letter-spacing: 2px;\n`;\n\nexport const StyleFaRegComment = styled(FaComment)`\n  cursor: pointer;\n`;\n\nexport const StyleSlLike = styled(AiFillLike)`\n  cursor: pointer;\n`;\n\nexport const StyleCiLocationOn = styled(CiLocationOn)`\n  cursor: pointer;\n`;\n","import Container from 'components/Container/Container';\nimport AppNavigation from 'components/AppNavigation/AppNavigation';\nimport InfoUserContainer from 'components/InfoUserContainer/InfoUserContainer';\nimport { authSignOutUser } from 'redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  NoPostBlock,\n  HeaderPosts,\n  HeaderPostsTitle,\n  LogoutWrapper,\n  StyleBiLogOut,\n  MainPostWrapper,\n  InfoUserWrapp,\n  InfoUserPost,\n  InfoUserAvatar,\n  InfoUserName,\n  PostListWrapper,\n  PostList,\n  PostListItem,\n  PostListPhoto,\n  PostTitle,\n  PanelPostList,\n  CommentCount,\n  CountLike,\n  PanelPostItem,\n  StyleFaRegComment,\n  StyleSlLike,\n  StyleCiLocationOn,\n} from './PostsPage.styled';\nimport Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport {\n  collection,\n  query,\n  getDocs,\n  orderBy,\n  doc,\n  updateDoc,\n  getDoc,\n  onSnapshot,\n} from 'firebase/firestore';\nimport { firestore, auth } from '../../firebase/config';\nimport { useNavigate } from 'react-router-dom';\n\nconst PostsPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [postLikes, setPostLikes] = useState({});\n  const [commentCounts, setCommentCounts] = useState({});\n\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchCommentCounts = async () => {\n      const commentCountsMap = {};\n\n      for (const post of posts) {\n        const postRef = doc(firestore, 'userPost', post.id);\n        const commentsCollectionRef = collection(postRef, 'comments');\n        const commentsQuery = query(commentsCollectionRef);\n        const snapshot = await getDocs(commentsQuery);\n        const commentCount = snapshot.size;\n        commentCountsMap[post.id] = commentCount;\n      }\n      setCommentCounts(commentCountsMap);\n    };\n\n    fetchCommentCounts();\n  }, [posts]);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postsCollectionRef = collection(firestore, 'userPost');\n      const postsQuery = query(postsCollectionRef, orderBy('createdAt'));\n      const snapshot = await getDocs(postsQuery);\n      const fetchedPosts = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setPosts(fetchedPosts.reverse());\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleLike = async postId => {\n    try {\n      const userId = auth.currentUser.uid;\n      const postRef = doc(firestore, 'userPost', postId);\n      const postSnapshot = await getDoc(postRef);\n      const postData = postSnapshot.data();\n      const currentLikes = postData.likes || 0;\n      const likedByUser = postData.likedByUser && postData.likedByUser[userId];\n\n      const isLiked = likedByUser === true;\n\n      let updatedLikes;\n      let updatedLikedByUser;\n\n      if (isLiked) {\n        updatedLikes = currentLikes - 1;\n        updatedLikedByUser = { ...postData.likedByUser };\n        delete updatedLikedByUser[userId];\n      } else {\n        updatedLikes = currentLikes + 1;\n        updatedLikedByUser = { ...postData.likedByUser, [userId]: true };\n      }\n\n      const updateData = {\n        likes: updatedLikes,\n        likedByUser: updatedLikedByUser,\n      };\n\n      await updateDoc(postRef, updateData);\n\n      setPosts(prevPosts =>\n        prevPosts.map(post => {\n          if (post.id === postId) {\n            return {\n              ...post,\n              likes: updatedLikes,\n              likedByUser: updatedLikedByUser,\n            };\n          }\n          return post;\n        })\n      );\n    } catch (error) {\n      console.log('Ошибка при обновлении лайка:', error);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(\n      collection(firestore, 'userPost'),\n      snapshot => {\n        const updatedPostLikes = {};\n\n        snapshot.forEach(doc => {\n          const postId = doc.id;\n          const postLikesData = doc.data().likedByUser || {};\n          updatedPostLikes[postId] = postLikesData;\n        });\n\n        setPostLikes(updatedPostLikes);\n      }\n    );\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const logOut = () => {\n    Notiflix.Confirm.show(\n      'Confirmation',\n      'Are you sure you want to log out?',\n      'Yes',\n      'No',\n      () => {\n        dispatch(authSignOutUser());\n        navigate('/Login');\n      },\n      () => {}\n    );\n  };\n\n  return (\n    <>\n      <Container>\n        <HeaderPosts>\n          <HeaderPostsTitle>Posts</HeaderPostsTitle>\n          <LogoutWrapper onClick={logOut}>\n            <StyleBiLogOut size={30} />\n          </LogoutWrapper>\n        </HeaderPosts>\n        <MainPostWrapper>\n          <InfoUserWrapp>\n            <InfoUserContainer />\n          </InfoUserWrapp>\n          <PostListWrapper>\n            {posts.length === 0 ? (\n              <NoPostBlock>No posts found.</NoPostBlock>\n            ) : (\n              <PostList>\n                {posts.map(post => (\n                  <PostListItem key={post.id}>\n                    <InfoUserPost>\n                      <InfoUserAvatar src={post.userAvatar} alt=\"userAvatar\" />\n                      <InfoUserName>{post.login}</InfoUserName>\n                    </InfoUserPost>\n                    <PostListPhoto\n                      src={post.imageURL}\n                      alt=\"Post\"\n                      loading=\"lazy\"\n                    />\n                    <PostTitle>{post.title}</PostTitle>\n                    <PanelPostList>\n                      <PanelPostItem>\n                        <Link to={`/comments/${post.id}`}>\n                          <StyleFaRegComment size={30} color=\"aqua\" />\n                          <CommentCount>{commentCounts[post.id]}</CommentCount>\n                        </Link>\n                      </PanelPostItem>\n                      <PanelPostItem>\n                        <StyleSlLike\n                          size={30}\n                          color={postLikes[post.id] ? 'aqua' : 'gold'}\n                          onClick={() => handleLike(post.id, post.userId)}\n                        />\n                        <CountLike>\n                          {postLikes[post.id] ? post.likes : postLikes[post.id]}\n                        </CountLike>\n                      </PanelPostItem>\n                      <PanelPostItem>\n                        <StyleCiLocationOn size={30} color=\"aqua\" />\n                      </PanelPostItem>\n                    </PanelPostList>\n                  </PostListItem>\n                ))}\n              </PostList>\n            )}\n          </PostListWrapper>\n        </MainPostWrapper>\n        <AppNavigation />\n      </Container>\n    </>\n  );\n};\n\nexport default PostsPage;\n"],"names":["StyleNavigation","styled","NavigationList","NavigatiomItem","StyleCgProfile","CgProfile","StyleAiOutlinePlus","AiOutlinePlus","StyleTfiLayoutGrid3","TfiLayoutGrid3","StyleNavigationLink","NavLink","Container","to","size","StyleContainer","children","InfoUserBlock","PhotoUserContainer","InfoUserPhoto","InfoTextUserWrapper","InfoUserName","InfoUserEmail","name","useSelector","authSelector","email","avatar","src","NoPostBlock","HeaderPosts","HeaderPostsTitle","LogoutWrapper","StyleBiLogOut","BiLogOut","InfoUserPost","InfoUserAvatar","MainPostWrapper","InfoUserWrapp","PostListWrapper","PostList","PostListItem","PostListPhoto","PostTitle","PanelPostList","PanelPostItem","CountLike","CommentCount","StyleFaRegComment","FaComment","StyleSlLike","AiFillLike","StyleCiLocationOn","CiLocationOn","useState","posts","setPosts","postLikes","setPostLikes","commentCounts","setCommentCounts","dispatch","useDispatch","navigate","useNavigate","useEffect","fetchCommentCounts","commentCountsMap","post","postRef","doc","firestore","id","commentsCollectionRef","collection","commentsQuery","query","getDocs","snapshot","commentCount","fetchPosts","postsCollectionRef","postsQuery","orderBy","fetchedPosts","docs","map","data","reverse","handleLike","postId","userId","auth","getDoc","postSnapshot","postData","currentLikes","likes","likedByUser","updatedLikes","updatedLikedByUser","updateData","updateDoc","prevPosts","console","log","unsubscribe","onSnapshot","updatedPostLikes","forEach","postLikesData","onClick","Notiflix","authSignOutUser","length","userAvatar","alt","login","imageURL","loading","title","color","AppNavigation"],"sourceRoot":""}