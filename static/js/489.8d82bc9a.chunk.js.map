{"version":3,"file":"static/js/489.8d82bc9a.chunk.js","mappings":"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","sources":["components/AppNavigation/AppNavigation.styled.js","components/AppNavigation/AppNavigation.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","pages/CreatePostPage/CreatePostPage.styled.js","pages/CreatePostPage/CreatePostPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { TfiLayoutGrid3 } from 'react-icons/tfi';\nimport { CgProfile } from 'react-icons/cg';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyleNavigation = styled.nav`\n  position: fixed;\n  margin-left: auto;\n  margin-right: auto;\n  bottom: 10px;\n  left: 10px;\n  right: 10px;\n  z-index: 5;\n  background-color: rgba(0, 128, 0, 0.4);\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.6);\n`;\nexport const NavigationList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n`;\n\nexport const NavigatiomItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const StyleCgProfile = styled(CgProfile)`\n  fill: currentColor;\n  transition: 0.4s;\n\n  &:hover {\n    color: aqua;\n  }\n`;\n\nexport const StyleAiOutlinePlus = styled(AiOutlinePlus)`\n  fill: currentColor;\n  transition: 0.4s;\n\n  &:hover {\n    fill: aqua;\n  }\n`;\n\nexport const StyleTfiLayoutGrid3 = styled(TfiLayoutGrid3)`\n  fill: currentColor;\n  transition: 0.4s;\n\n  &:hover {\n    fill: aqua;\n  }\n`;\n\nexport const StyleNavigationLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: gold;\n  border: 1px solid gold;\n  border-radius: 5px;\n  padding: 3px;\n  width: 100%;\n  transition: background-color 0.4s;\n\n  &:hover {\n    border-color: aqua;\n  }\n\n  &.active {\n    color: aqua;\n    border-color: aqua;\n\n    > ${StyleCgProfile}, > ${StyleAiOutlinePlus}, > ${StyleTfiLayoutGrid3} {\n      fill: aqua;\n    }\n  }\n`;\n","import Container from 'components/Container/Container';\nimport {\n  StyleNavigationLink,\n  StyleNavigation,\n  NavigationList,\n  NavigatiomItem,\n  StyleCgProfile,\n  StyleAiOutlinePlus,\n  StyleTfiLayoutGrid3,\n} from './AppNavigation.styled';\nconst AppNavigation = () => {\n  return (\n    <Container>\n      <StyleNavigation>\n        <NavigationList>\n          <NavigatiomItem>\n            <StyleNavigationLink to=\"/Home\">\n              <StyleCgProfile size={30} />\n            </StyleNavigationLink>\n          </NavigatiomItem>\n          <NavigatiomItem>\n            <StyleNavigationLink to=\"/create-post\">\n              <StyleAiOutlinePlus size={30} />\n            </StyleNavigationLink>\n          </NavigatiomItem>\n          <NavigatiomItem>\n            <StyleNavigationLink to=\"/Posts\">\n              <StyleTfiLayoutGrid3 size={30} />\n            </StyleNavigationLink>\n          </NavigatiomItem>\n        </NavigationList>\n      </StyleNavigation>\n    </Container>\n  );\n};\n\nexport default AppNavigation;\n","import styled from 'styled-components';\n\nexport const StyleContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n","import { StyleContainer } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <StyleContainer>{children}</StyleContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\nimport { HiArrowLeftCircle } from 'react-icons/hi2';\nimport { Field, Form } from 'formik';\nimport { MdAddAPhoto } from 'react-icons/md';\nimport { SiReactivex } from 'react-icons/si';\nimport { FaTrashAlt } from 'react-icons/fa';\n\nexport const LoaderContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MainLoader = styled(SiReactivex)`\n  position: absolute;\n  animation: rotate 5s infinite linear;\n  -webkit-animation: rotate 5s infinite linear;\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const HeaderCreatePost = styled.div`\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  right: 10px;\n  z-index: 20;\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  box-shadow: 0px 0px 30px 10px rgba(10, 216, 244, 0.2);\n`;\n\nexport const HeaderCreatePostTitle = styled.h3`\n  width: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  text-transform: uppercase;\n  text-shadow: 0px 0px 20px #28a745;\n  color: #28a745;\n  letter-spacing: 2px;\n`;\n\nexport const BtnBackCreatePostWrapper = styled.div`\n  margin-right: 10px;\n  cursor: pointer;\n`;\n\nexport const StyleHiArrowLeftCircle = styled(HiArrowLeftCircle)`\n  margin-left: 10px;\n  fill: gold;\n  transition: fill 0.4s;\n\n  &:hover {\n    fill: aqua;\n  }\n`;\n\nexport const MainCreatePostWrapper = styled.div`\n  margin-top: 85px;\n  max-height: 500px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 0.5em;\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: transparent;\n  }\n`;\n\nexport const StyleFormCreatePost = styled(Form)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyleInputFileCreatePost = styled(Field)`\n  input[type='file'] {\n    display: none;\n  }\n`;\n\nexport const CustomFileInput = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  height: 350px;\n  border-radius: 4px;\n  padding: 8px;\n  background-color: rgba(0, 128, 0, 0.4);\n  box-shadow: 0px 0px 10px 7px rgba(10, 216, 244, 0.6);\n  cursor: pointer;\n  margin-top: 30px;\n`;\n\nexport const TextLabel = styled.span`\n  margin-top: 10px;\n  text-transform: uppercase;\n  text-shadow: 0px 0px 20px #28a745;\n  color: #28a745;\n  letter-spacing: 2px;\n`;\n\nexport const ImagePostContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const ImgPost = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const StyleMdAddAPhoto = styled(MdAddAPhoto)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  opacity: 0.5;\n  transform: translate(-50%, -50%);\n  display: block;\n  fill: gold;\n`;\n\nexport const LabelInputTitle = styled.label`\n  position: relative;\n  width: 100%;\n  max-width: 400px;\n  height: 30px;\n  box-shadow: 0 5px 10px 0 rgba(10, 216, 244, 0.6);\n  margin-top: 30px;\n`;\n\nexport const StyleInputTitle = styled(Field)`\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 128, 0, 0.4);\n  padding: 5px;\n  border: none;\n  color: gold;\n  font-size: 21px;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    outline: none;\n  }\n`;\n\nexport const TextTitle = styled.span`\n  position: absolute;\n  top: -20px;\n  left: 3px;\n  color: green;\n  opacity: 0.8;\n  text-transform: uppercase;\n  text-shadow: 0px 0px 10px #28a745;\n`;\n\nexport const ButtonSendPost = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  height: 30px;\n  box-shadow: 0 5px 10px 0 rgba(10, 216, 244, 0.6);\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: gold;\n  color: green;\n  cursor: pointer;\n  text-transform: uppercase;\n  border: none;\n  border-radius: 30px;\n  transition: background-color 0.4s, color 0.4s;\n\n  &:hover {\n    background-color: aqua;\n    color: gold;\n  }\n`;\n\nexport const StyleFaTrashAlt = styled(FaTrashAlt)`\n  display: block;\n  transition: fill 0.4s;\n\n  &:hover {\n    fill: aqua;\n  }\n`;\n\nexport const ButtonClearWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  max-width: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: rgba(0, 128, 0, 0.4);\n  margin-top: 50px;\n  padding: 10px;\n  border-radius: 30px;\n  cursor: pointer;\n  transition: fill 0.4s;\n\n  &:hover {\n    & > ${StyleFaTrashAlt} {\n      fill: aqua;\n    }\n  }\n`;\n\nexport const NavigationWrapper = styled.div`\n  margin-top: 100px;\n`;\n","import AppNavigation from 'components/AppNavigation/AppNavigation';\nimport Container from 'components/Container/Container';\nimport authSelector from 'redux/auth/authSelector';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport { storage, firestore } from '../../firebase/config';\nimport { ref, getDownloadURL, uploadBytes } from 'firebase/storage';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  LoaderContainer,\n  MainLoader,\n  HeaderCreatePost,\n  BtnBackCreatePostWrapper,\n  StyleHiArrowLeftCircle,\n  HeaderCreatePostTitle,\n  MainCreatePostWrapper,\n  StyleFormCreatePost,\n  CustomFileInput,\n  ImagePostContainer,\n  ImgPost,\n  StyleInputFileCreatePost,\n  StyleMdAddAPhoto,\n  TextLabel,\n  LabelInputTitle,\n  StyleInputTitle,\n  TextTitle,\n  ButtonSendPost,\n  ButtonClearWrapper,\n  StyleFaTrashAlt,\n  NavigationWrapper,\n} from './CreatePostPage.styled';\n\nconst initialValues = {\n  userPost: null,\n  postTitle: '',\n};\n\nconst CreatePostPage = () => {\n  const [loading, setLoading] = useState(false);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [postTitle, setPostTitle] = useState('');\n\n  const inputElement = document.getElementById('postImg');\n\n  const navigate = useNavigate();\n\n  const userId = useSelector(authSelector.getUserId);\n\n  const postId = uuidv4();\n\n  const createdAt = new Date();\n\n  const handleClickBack = () => {\n    navigate(-1);\n  };\n\n  const handleClearState = () => {\n    setUploadedImage(null);\n    setPostTitle('');\n    inputElement.value = '';\n  };\n\n  const handleChangeTitle = e => {\n    setPostTitle(e.target.value);\n  };\n\n  const handleFileChange = async e => {\n    try {\n      setLoading(true);\n      setUploadedImage(null);\n\n      const file = e.target.files[0];\n      const storageRef = ref(storage, `userPost/${file.name}`);\n\n      await uploadBytes(storageRef, file);\n\n      const downloadURL = await getDownloadURL(storageRef);\n\n      setUploadedImage(downloadURL);\n    } catch (error) {\n      console.log('Ошибка при загрузке файла:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeletePhoto = () => {\n    inputElement.value = '';\n    setUploadedImage(null);\n  };\n\n  const uploadPhotoToServer = async () => {\n    try {\n      if (uploadedImage) {\n        setLoading(true);\n\n        const postTitleVar = postTitle; // Здесь можно получить значение заголовка из формы\n\n        // Создание нового документа в коллекции \"posts\" и сохранение URL изображения\n        const docRef = await addDoc(collection(firestore, 'userPost'), {\n          id: postId,\n          title: postTitleVar,\n          imageURL: uploadedImage,\n          currentUserId: userId,\n          createdAt: createdAt,\n        });\n\n        console.log('Документ успешно добавлен с ID:', docRef.id);\n\n        // Очистка формы и загруженного изображения\n        setUploadedImage(null);\n        inputElement.value = '';\n        setPostTitle('');\n\n        toast.success('Post created successfully');\n      }\n    } catch (error) {\n      console.log('Ошибка при загрузке фото на сервер:', error);\n      toast.error('Error creating post');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <HeaderCreatePost>\n          <BtnBackCreatePostWrapper onClick={handleClickBack}>\n            <StyleHiArrowLeftCircle size={30} />\n          </BtnBackCreatePostWrapper>\n          <HeaderCreatePostTitle>Create Post</HeaderCreatePostTitle>\n        </HeaderCreatePost>\n        <MainCreatePostWrapper>\n          <Formik initialValues={initialValues}>\n            <StyleFormCreatePost>\n              <CustomFileInput htmlFor=\"postImg\">\n                {uploadedImage && (\n                  <ImagePostContainer>\n                    <ImgPost src={uploadedImage} alt=\"Uploaded Avatar\" />\n                  </ImagePostContainer>\n                )}\n                {loading && (\n                  <LoaderContainer>\n                    <MainLoader size={200} fill=\"gold\" />\n                  </LoaderContainer>\n                )}\n                <StyleInputFileCreatePost\n                  type=\"file\"\n                  name=\"postImg\"\n                  id=\"postImg\"\n                  onChange={handleFileChange}\n                  style={{ display: 'none' }}\n                  disabled={!!uploadedImage}\n                />\n                {!loading && !uploadedImage && <StyleMdAddAPhoto size={100} />}\n              </CustomFileInput>\n              <TextLabel\n                onClick={handleDeletePhoto}\n                style={{\n                  cursor: uploadedImage ? 'pointer' : 'default',\n                  color: uploadedImage ? 'red' : 'green',\n                }}\n              >\n                {uploadedImage ? 'Edit Photo' : 'Download Photo'}\n              </TextLabel>\n              <LabelInputTitle htmlFor=\"inputTitle\">\n                <TextTitle>title...</TextTitle>\n                <StyleInputTitle\n                  type=\"text\"\n                  name=\"postTitle\"\n                  id=\"inputTitle\"\n                  value={postTitle}\n                  onChange={handleChangeTitle}\n                />\n              </LabelInputTitle>\n            </StyleFormCreatePost>\n          </Formik>\n          <ButtonSendPost\n            type=\"button\"\n            style={{\n              backgroundColor: uploadedImage ? 'gold' : 'gray',\n              color: uploadedImage ? 'green' : 'white',\n            }}\n            onClick={uploadPhotoToServer}\n          >\n            Publish\n          </ButtonSendPost>\n          <ButtonClearWrapper onClick={handleClearState}>\n            <StyleFaTrashAlt\n              size={30}\n              color={uploadedImage ? 'gold' : 'gray'}\n            />\n          </ButtonClearWrapper>\n        </MainCreatePostWrapper>\n        <NavigationWrapper>\n          <AppNavigation />\n        </NavigationWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default CreatePostPage;\n"],"names":["StyleNavigation","styled","NavigationList","NavigatiomItem","StyleCgProfile","CgProfile","StyleAiOutlinePlus","AiOutlinePlus","StyleTfiLayoutGrid3","TfiLayoutGrid3","StyleNavigationLink","NavLink","Container","to","size","StyleContainer","children","LoaderContainer","MainLoader","SiReactivex","HeaderCreatePost","HeaderCreatePostTitle","BtnBackCreatePostWrapper","StyleHiArrowLeftCircle","HiArrowLeftCircle","MainCreatePostWrapper","StyleFormCreatePost","Form","StyleInputFileCreatePost","Field","CustomFileInput","TextLabel","ImagePostContainer","ImgPost","StyleMdAddAPhoto","MdAddAPhoto","LabelInputTitle","StyleInputTitle","TextTitle","ButtonSendPost","StyleFaTrashAlt","FaTrashAlt","ButtonClearWrapper","NavigationWrapper","initialValues","userPost","postTitle","useState","loading","setLoading","uploadedImage","setUploadedImage","setPostTitle","inputElement","document","getElementById","navigate","useNavigate","userId","useSelector","authSelector","postId","uuidv4","createdAt","Date","handleFileChange","e","file","target","files","storageRef","ref","storage","name","uploadBytes","getDownloadURL","downloadURL","console","log","uploadPhotoToServer","postTitleVar","addDoc","collection","firestore","id","title","imageURL","currentUserId","docRef","value","toast","onClick","htmlFor","src","alt","fill","type","onChange","style","display","disabled","cursor","color","backgroundColor","AppNavigation"],"sourceRoot":""}