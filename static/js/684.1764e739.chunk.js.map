{"version":3,"file":"static/js/684.1764e739.chunk.js","mappings":"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","sources":["pages/RegistrationPage/RegistrationPage.styled.js","components/MainForm/FormRegistration/FormRegistration.styled.js","components/MainForm/FormRegistration/FormRegistration.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegistrationPageWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { AiOutlinePlusCircle, AiOutlineMinusCircle } from 'react-icons/ai';\nimport { SiSemanticuireact } from 'react-icons/si';\n\nexport const MainLoader = styled(SiSemanticuireact)`\n  animation: rotate 5s infinite linear;\n  -webkit-animation: rotate 5s infinite linear;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const StyleFormRegistration = styled(Form)`\n  position: relative;\n  width: 100%;\n  background-image: var(--background-body);\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 45px;\n  padding-top: 92px;\n  border-radius: 70px 70px 0 0;\n`;\n\nexport const RegistrationImgContainer = styled.div`\n  position: absolute;\n  top: -70px;\n  left: 50%;\n  transform: translate(-50%);\n  width: 130px;\n  height: 120px;\n  background-image: var(--background-body);\n  border-radius: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const IconContainer = styled.div`\n  width: 100%;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 130px;\n  height: 120px;\n  border-radius: 16px;\n`;\n\nexport const ImgAvatar = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 16px;\n  object-fit: cover;\n`;\n\nexport const StyleAiOutlinePlusCircle = styled(AiOutlinePlusCircle)`\n  position: absolute;\n  bottom: 10px;\n  right: -15px;\n  fill: gold;\n  cursor: pointer;\n`;\n\nexport const StyleAiOutlineMinusCircle = styled(AiOutlineMinusCircle)`\n  position: absolute;\n  bottom: 10px;\n  right: -15px;\n  fill: red;\n  cursor: pointer;\n`;\n\nexport const RegistrationTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 30px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: var(--color);\n  text-transform: uppercase;\n  margin-bottom: 35px;\n`;\n\nexport const FeedbackFormGroup = styled.div`\n  max-width: 545px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  &:nth-last-of-type(2) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const StyleInputRegistration = styled(Field)`\n  width: 100%;\n  display: flex;\n  padding: 16px;\n  background-color: #f6f6f6;\n  border: 1px solid #e8e8e8;\n  border-radius: 8px;\n\n  &::placeholder {\n    font-size: 16px;\n    line-height: 19px;\n    color: #bdbdbd;\n  }\n`;\n\nexport const StyleErrorMessage = styled(ErrorMessage)``;\n\nexport const Error = styled.div`\n  color: red;\n  font-size: 15px;\n  margin-top: 10px;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ToggleShowPasword = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translate(-50%, -10px);\n  -webkit-transform: translate(-50%, -10px);\n  -moz-transform: translate(-50%, -10px);\n  -ms-transform: translate(-50%, -10px);\n  -o-transform: translate(-50%, -10px);\n  cursor: pointer;\n`;\n\nexport const Btnwrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 545px;\n`;\n\nexport const BtnRegistration = styled.button`\n  width: 100%;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  background-color: #ff6c00;\n  border-radius: 100px;\n  font-size: 16px;\n  line-height: 1.19;\n  color: #ffffff;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.4s;\n  margin-bottom: 15px;\n\n  &:hover {\n    background-color: #ff4c00;\n  }\n`;\n\nexport const LinkOnPageLogIn = styled.p`\n  text-align: center;\n  cursor: pointer;\n  color: #f6f6f6;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport { authSignUpUser } from 'redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { storage } from '../../../firebase/config';\nimport { ref, getDownloadURL, uploadBytes } from 'firebase/storage';\nimport * as yup from 'yup';\nimport {\n  MainLoader,\n  StyleFormRegistration,\n  RegistrationImgContainer,\n  IconContainer,\n  ImageContainer,\n  ImgAvatar,\n  StyleAiOutlinePlusCircle,\n  StyleAiOutlineMinusCircle,\n  RegistrationTitle,\n  FeedbackFormGroup,\n  StyleInputRegistration,\n  StyleErrorMessage,\n  Error,\n  PasswordWrapper,\n  ToggleShowPasword,\n  Btnwrapper,\n  BtnRegistration,\n  LinkOnPageLogIn,\n} from './FormRegistration.styled';\n\nconst initialValues = {\n  login: '',\n  email: '',\n  password: '',\n  userAvatar: null,\n};\n\nconst schema = yup.object().shape({\n  login: yup.string().min(4).max(20).required(),\n  email: yup.string().required(),\n  password: yup.string().min(10).max(20).required(),\n  userAvatar: yup.mixed().optional(),\n});\n\nconst FormRegistration = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [dowmloadImg, setDownloadImg] = useState(false);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [showImage, setShowImage] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const fileInputRef = useRef(null);\n  const formikRef = useRef(null);\n\n  const dispatch = useDispatch();\n\n  const toggleShowPassword = () => {\n    setShowPassword(prewShowPassword => !prewShowPassword);\n  };\n\n  const toggleDownloadImg = () => {\n    if (showImage) {\n      // Если фото уже отображено, скрываем его и инпут\n      setUploadedImage(null);\n      fileInputRef.current.value = '';\n      setShowImage(false);\n    } else {\n      // Иначе открываем файловый загрузчик\n      fileInputRef.current.click();\n      setShowImage(true);\n    }\n    setDownloadImg(prewShowImg => !prewShowImg);\n  };\n\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    const storageRef = ref(storage, `userAvatar/${file.name}`);\n\n    try {\n      setLoading(true);\n      // Загрузка данных файла в Firebase Storage\n      await uploadBytes(storageRef, file);\n\n      // Получение URL загруженного файла\n      const downloadURL = await getDownloadURL(storageRef);\n\n      setUploadedImage(downloadURL);\n\n      // Обновление значения userAvatar в форме\n      formikRef.current.setFieldValue('userAvatar', downloadURL);\n    } catch (error) {\n      console.log('Ошибка при загрузке файла:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (values, { resetForm, setFieldValue }) => {\n    try {\n      const { userAvatar, ...userData } = values;\n\n      // Если пользователь выбрал аватар, загружаем его в Storage и получаем URL\n      let downloadURL = null;\n      if (userAvatar) {\n        const storageRef = ref(storage, ` userAvatar/${userAvatar.name}`);\n        await uploadBytes(storageRef, userAvatar);\n        downloadURL = await getDownloadURL(storageRef);\n      }\n\n      // Добавляем URL аватара в данные пользователя и отправляем на сервер\n      const userDataWithAvatar = downloadURL\n        ? { ...userData, userAvatar: downloadURL }\n        : userData;\n      formikRef.current.setFieldValue('userAvatar', downloadURL); // Обновляем значение userAvatar в форме\n      await dispatch(authSignUpUser(userDataWithAvatar));\n      navigate('/Home');\n      resetForm();\n    } catch (error) {\n      console.log('Sign-in error:', error);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n        innerRef={formikRef}\n      >\n        <StyleFormRegistration>\n          <RegistrationImgContainer>\n            <IconContainer onClick={toggleDownloadImg}>\n              {uploadedImage && (\n                <ImageContainer>\n                  <ImgAvatar src={uploadedImage} alt=\"Uploaded Avatar\" />\n                </ImageContainer>\n              )}\n              {loading && <MainLoader size={50} fill=\"gold\" />}\n              {dowmloadImg ? (\n                <StyleAiOutlineMinusCircle size={30} />\n              ) : (\n                <StyleAiOutlinePlusCircle size={30} />\n              )}\n            </IconContainer>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleFileChange}\n              style={{ display: 'none' }}\n              ref={fileInputRef}\n              name=\" userAvatar\"\n            />\n          </RegistrationImgContainer>\n          <RegistrationTitle>Registration</RegistrationTitle>\n          <FeedbackFormGroup>\n            <StyleInputRegistration\n              type=\"text\"\n              name=\"login\"\n              placeholder=\"name\"\n            ></StyleInputRegistration>\n            <StyleErrorMessage name=\"login\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <FeedbackFormGroup>\n            <StyleInputRegistration\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n            />\n            <StyleErrorMessage name=\"email\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <FeedbackFormGroup>\n            <PasswordWrapper>\n              <StyleInputRegistration\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"password\"\n              />\n              <ToggleShowPasword onClick={toggleShowPassword}>\n                {showPassword ? <BsEyeSlash /> : <BsEye />}\n              </ToggleShowPasword>\n            </PasswordWrapper>\n            <StyleErrorMessage name=\"password\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <Btnwrapper>\n            <BtnRegistration type=\"submit\">Registration</BtnRegistration>\n          </Btnwrapper>\n          <Link to=\"/Login\">\n            <LinkOnPageLogIn>Already have an account? Sign in</LinkOnPageLogIn>\n          </Link>\n        </StyleFormRegistration>\n      </Formik>\n    </>\n  );\n};\n\nexport default FormRegistration;\n","import { RegistrationPageWrapper } from './RegistrationPage.styled';\nimport FormRegistration from 'components/MainForm/FormRegistration/FormRegistration';\n\nconst RegistrationPage = () => {\n  return (\n    <RegistrationPageWrapper>\n      <FormRegistration />\n    </RegistrationPageWrapper>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RegistrationPageWrapper","styled","MainLoader","SiSemanticuireact","StyleFormRegistration","Form","RegistrationImgContainer","IconContainer","ImageContainer","ImgAvatar","StyleAiOutlinePlusCircle","AiOutlinePlusCircle","StyleAiOutlineMinusCircle","AiOutlineMinusCircle","RegistrationTitle","FeedbackFormGroup","StyleInputRegistration","Field","StyleErrorMessage","ErrorMessage","Error","PasswordWrapper","ToggleShowPasword","Btnwrapper","BtnRegistration","LinkOnPageLogIn","initialValues","login","email","password","userAvatar","schema","yup","shape","min","max","required","optional","useState","showPassword","setShowPassword","dowmloadImg","setDownloadImg","uploadedImage","setUploadedImage","showImage","setShowImage","loading","setLoading","navigate","useNavigate","fileInputRef","useRef","formikRef","dispatch","useDispatch","handleFileChange","e","file","target","files","storageRef","ref","storage","name","uploadBytes","getDownloadURL","downloadURL","current","setFieldValue","console","log","handleSubmit","values","resetForm","userData","userDataWithAvatar","authSignUpUser","validationSchema","onSubmit","innerRef","onClick","value","click","prewShowImg","src","alt","size","fill","type","accept","onChange","style","display","placeholder","msg","prewShowPassword","to"],"sourceRoot":""}