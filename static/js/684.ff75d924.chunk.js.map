{"version":3,"file":"static/js/684.ff75d924.chunk.js","mappings":"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","sources":["pages/RegistrationPage/RegistrationPage.styled.js","components/MainForm/FormRegistration/FormRegistration.styled.js","components/MainForm/FormRegistration/FormRegistration.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegistrationPageWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { AiOutlinePlusCircle, AiOutlineMinusCircle } from 'react-icons/ai';\nimport { SiSemanticuireact, SiReactivex } from 'react-icons/si';\n\nexport const MainLoader = styled(SiSemanticuireact)`\n  animation: rotate 5s infinite linear;\n  -webkit-animation: rotate 5s infinite linear;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const RegisterLoaderWraper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 15;\n  background-image: var(--background-body);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const RegisrLoader = styled(SiReactivex)`\n  animation: rotate 5s infinite linear;\n  -webkit-animation: rotate 5s infinite linear;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const StyleFormRegistration = styled(Form)`\n  position: relative;\n  width: 100%;\n  background-image: var(--background-body);\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 45px;\n  padding-top: 92px;\n  border-radius: 70px 70px 0 0;\n`;\n\nexport const RegistrationImgContainer = styled.div`\n  position: absolute;\n  top: -70px;\n  left: 50%;\n  transform: translate(-50%);\n  width: 130px;\n  height: 120px;\n  background-image: var(--background-body);\n  border-radius: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const IconContainer = styled.div`\n  width: 100%;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 130px;\n  height: 120px;\n  border-radius: 16px;\n`;\n\nexport const ImgAvatar = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 16px;\n  object-fit: cover;\n`;\n\nexport const StyleAiOutlinePlusCircle = styled(AiOutlinePlusCircle)`\n  position: absolute;\n  bottom: 10px;\n  right: -15px;\n  fill: gold;\n  cursor: pointer;\n`;\n\nexport const StyleAiOutlineMinusCircle = styled(AiOutlineMinusCircle)`\n  position: absolute;\n  bottom: 10px;\n  right: -15px;\n  fill: red;\n  cursor: pointer;\n`;\n\nexport const RegistrationTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 30px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: var(--color);\n  text-transform: uppercase;\n  margin-bottom: 35px;\n`;\n\nexport const FeedbackFormGroup = styled.div`\n  max-width: 545px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  &:nth-last-of-type(2) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const StyleInputRegistration = styled(Field)`\n  width: 100%;\n  display: flex;\n  padding: 16px;\n  background-color: #f6f6f6;\n  border: 1px solid #e8e8e8;\n  border-radius: 8px;\n\n  &::placeholder {\n    font-size: 16px;\n    line-height: 19px;\n    color: #bdbdbd;\n  }\n`;\n\nexport const StyleErrorMessage = styled(ErrorMessage)``;\n\nexport const Error = styled.div`\n  color: red;\n  font-size: 15px;\n  margin-top: 10px;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ToggleShowPasword = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translate(-50%, -10px);\n  -webkit-transform: translate(-50%, -10px);\n  -moz-transform: translate(-50%, -10px);\n  -ms-transform: translate(-50%, -10px);\n  -o-transform: translate(-50%, -10px);\n  cursor: pointer;\n`;\n\nexport const Btnwrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 545px;\n`;\n\nexport const BtnRegistration = styled.button`\n  width: 100%;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  background-color: #ff6c00;\n  border-radius: 100px;\n  font-size: 16px;\n  line-height: 1.19;\n  color: #ffffff;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.4s;\n  margin-bottom: 15px;\n\n  &:hover {\n    background-color: #ff4c00;\n  }\n`;\n\nexport const LinkOnPageLogIn = styled.p`\n  text-align: center;\n  cursor: pointer;\n  color: #f6f6f6;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport { authSignUpUser } from 'redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { storage } from '../../../firebase/config';\nimport { ref, getDownloadURL, uploadBytes } from 'firebase/storage';\nimport * as yup from 'yup';\nimport {\n  MainLoader,\n  RegisterLoaderWraper,\n  RegisrLoader,\n  StyleFormRegistration,\n  RegistrationImgContainer,\n  IconContainer,\n  ImageContainer,\n  ImgAvatar,\n  StyleAiOutlinePlusCircle,\n  StyleAiOutlineMinusCircle,\n  RegistrationTitle,\n  FeedbackFormGroup,\n  StyleInputRegistration,\n  StyleErrorMessage,\n  Error,\n  PasswordWrapper,\n  ToggleShowPasword,\n  Btnwrapper,\n  BtnRegistration,\n  LinkOnPageLogIn,\n} from './FormRegistration.styled';\n\nconst initialValues = {\n  login: '',\n  email: '',\n  password: '',\n  userAvatar: null,\n};\n\nconst schema = yup.object().shape({\n  login: yup.string().min(4).max(20).required(),\n  email: yup.string().required(),\n  password: yup.string().min(10).max(20).required(),\n  userAvatar: yup.mixed().optional(),\n});\n\nconst FormRegistration = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [dowmloadImg, setDownloadImg] = useState(false);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [showImage, setShowImage] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isRegistrLoading, setIsRegistrLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const fileInputRef = useRef(null);\n  const formikRef = useRef(null);\n\n  const dispatch = useDispatch();\n\n  const toggleShowPassword = () => {\n    setShowPassword(prewShowPassword => !prewShowPassword);\n  };\n\n  const toggleDownloadImg = () => {\n    if (showImage) {\n      // Если фото уже отображено, скрываем его и инпут\n      setUploadedImage(null);\n      fileInputRef.current.value = '';\n      setShowImage(false);\n    } else {\n      // Иначе открываем файловый загрузчик\n      fileInputRef.current.click();\n      setShowImage(true);\n    }\n    setDownloadImg(prewShowImg => !prewShowImg);\n  };\n\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n\n    try {\n      setLoading(true);\n      // Загрузка данных файла в Firebase Storage\n      const storageRef = ref(storage, `userAvatar/${file.name}`);\n      await uploadBytes(storageRef, file);\n\n      // Получение URL загруженного файла\n      const downloadURL = await getDownloadURL(storageRef);\n      setUploadedImage(downloadURL);\n\n      // Обновление значения userAvatar в форме\n      formikRef.current.setFieldValue('userAvatar', file); // Здесь используется file, а не downloadURL\n    } catch (error) {\n      console.log('Ошибка при загрузке файла:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      setIsRegistrLoading(true);\n\n      const { userAvatar, ...userData } = values;\n\n      // Если пользователь выбрал аватар, загружаем его в Storage и получаем URL\n      let downloadURL = null;\n      if (userAvatar) {\n        const storageRef = ref(storage, `userAvatar/${userAvatar.name}`);\n        await uploadBytes(storageRef, userAvatar);\n        downloadURL = await getDownloadURL(storageRef);\n      }\n\n      // Добавляем URL аватара в данные пользователя и отправляем на сервер\n      const userDataWithAvatar = downloadURL\n        ? { ...userData, userAvatar: downloadURL }\n        : userData;\n      formikRef.current.setFieldValue('userAvatar', downloadURL); // Обновляем значение userAvatar в форме\n      await dispatch(authSignUpUser(userDataWithAvatar));\n      navigate('/Home');\n      resetForm();\n    } catch (error) {\n      console.log('Sign-in error:', error);\n    } finally {\n      setIsRegistrLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n        innerRef={formikRef}\n      >\n        <StyleFormRegistration>\n          {isRegistrLoading && (\n            <RegisterLoaderWraper>\n              <RegisrLoader size={350} color=\"gold\" />\n            </RegisterLoaderWraper>\n          )}\n          <RegistrationImgContainer>\n            <IconContainer onClick={toggleDownloadImg}>\n              {uploadedImage && (\n                <ImageContainer>\n                  <ImgAvatar src={uploadedImage} alt=\"Uploaded Avatar\" />\n                </ImageContainer>\n              )}\n              {loading && <MainLoader size={50} fill=\"gold\" />}\n              {dowmloadImg ? (\n                <StyleAiOutlineMinusCircle size={30} />\n              ) : (\n                <StyleAiOutlinePlusCircle size={30} />\n              )}\n            </IconContainer>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleFileChange}\n              style={{ display: 'none' }}\n              ref={fileInputRef}\n              name=\"userAvatar\"\n            />\n          </RegistrationImgContainer>\n          <RegistrationTitle>Registration</RegistrationTitle>\n          <FeedbackFormGroup>\n            <StyleInputRegistration\n              type=\"text\"\n              name=\"login\"\n              placeholder=\"name\"\n            ></StyleInputRegistration>\n            <StyleErrorMessage name=\"login\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <FeedbackFormGroup>\n            <StyleInputRegistration\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n            />\n            <StyleErrorMessage name=\"email\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <FeedbackFormGroup>\n            <PasswordWrapper>\n              <StyleInputRegistration\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"password\"\n              />\n              <ToggleShowPasword onClick={toggleShowPassword}>\n                {showPassword ? <BsEyeSlash /> : <BsEye />}\n              </ToggleShowPasword>\n            </PasswordWrapper>\n            <StyleErrorMessage name=\"password\">\n              {msg => <Error>{msg}</Error>}\n            </StyleErrorMessage>\n          </FeedbackFormGroup>\n          <Btnwrapper>\n            <BtnRegistration type=\"submit\">Registration</BtnRegistration>\n          </Btnwrapper>\n          <Link to=\"/Login\">\n            <LinkOnPageLogIn>Already have an account? Sign in</LinkOnPageLogIn>\n          </Link>\n        </StyleFormRegistration>\n      </Formik>\n    </>\n  );\n};\n\nexport default FormRegistration;\n","import { RegistrationPageWrapper } from './RegistrationPage.styled';\nimport FormRegistration from 'components/MainForm/FormRegistration/FormRegistration';\n\nconst RegistrationPage = () => {\n  return (\n    <RegistrationPageWrapper>\n      <FormRegistration />\n    </RegistrationPageWrapper>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RegistrationPageWrapper","styled","MainLoader","SiSemanticuireact","RegisterLoaderWraper","RegisrLoader","SiReactivex","StyleFormRegistration","Form","RegistrationImgContainer","IconContainer","ImageContainer","ImgAvatar","StyleAiOutlinePlusCircle","AiOutlinePlusCircle","StyleAiOutlineMinusCircle","AiOutlineMinusCircle","RegistrationTitle","FeedbackFormGroup","StyleInputRegistration","Field","StyleErrorMessage","ErrorMessage","Error","PasswordWrapper","ToggleShowPasword","Btnwrapper","BtnRegistration","LinkOnPageLogIn","initialValues","login","email","password","userAvatar","schema","yup","shape","min","max","required","optional","useState","showPassword","setShowPassword","dowmloadImg","setDownloadImg","uploadedImage","setUploadedImage","showImage","setShowImage","loading","setLoading","isRegistrLoading","setIsRegistrLoading","navigate","useNavigate","fileInputRef","useRef","formikRef","dispatch","useDispatch","handleFileChange","e","file","target","files","storageRef","ref","storage","name","uploadBytes","getDownloadURL","downloadURL","current","setFieldValue","console","log","handleSubmit","values","resetForm","userData","userDataWithAvatar","authSignUpUser","validationSchema","onSubmit","innerRef","size","color","onClick","value","click","prewShowImg","src","alt","fill","type","accept","onChange","style","display","placeholder","msg","prewShowPassword","to"],"sourceRoot":""}